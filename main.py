import customtkinter as ctk
from tkinter import messagebox
import tkinter as tk
from db import init_db, save_game, fetch_all_games, populate_default_rules
from knowledge import get_recommendation, determine_audience

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ–º—ã
ctk.set_appearance_mode("dark")
ctk.set_default_color_theme("blue")

class GameRecommendationApp:
    def __init__(self):
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        init_db()
        populate_default_rules()
        
        # –ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ
        self.root = ctk.CTk()
        self.root.title("üéÆ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ç–æ—Ä –∏–≥—Ä")
        self.root.geometry("1200x800")
        self.root.resizable(True, True)
        
        # –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –ø–æ–ª–µ–π –≤–≤–æ–¥–∞
        self.init_variables()
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        self.create_widgets()
        
    def init_variables(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–ª–µ–π –≤–≤–æ–¥–∞"""
        self.genre_var = ctk.StringVar(value="RPG")
        self.theme_var = ctk.StringVar(value="–§—ç–Ω—Ç–µ–∑–∏")
        self.rating_var = ctk.StringVar(value="E")
        self.players_var = ctk.StringVar(value="–æ–¥–∏–Ω–æ—á–Ω–∞—è –∏–≥—Ä–∞")
        self.year_var = ctk.StringVar(value="2022")
        self.graphics_var = ctk.StringVar(value="—Ä–µ–∞–ª–∏–∑–º")
        self.difficulty_var = ctk.StringVar(value="—Å—Ä–µ–¥–Ω—è—è")
        self.popularity_var = ctk.StringVar(value="–≤—ã—Å–æ–∫–∞—è")
        self.dlc_var = ctk.StringVar(value="–î–∞")
        self.platform_var = ctk.StringVar(value="PC")
        
    def create_widgets(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –≤–∏–¥–∂–µ—Ç–æ–≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        # –°–æ–∑–¥–∞–Ω–∏–µ tabview
        self.tabview = ctk.CTkTabview(self.root, width=1150, height=750)
        self.tabview.pack(fill="both", expand=True, padx=20, pady=20)
        
        # –í–∫–ª–∞–¥–∫–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
        self.tabview.add("üéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏")
        self.create_recommendation_tab()
        
        # –í–∫–ª–∞–¥–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏
        self.tabview.add("üìö –ò—Å—Ç–æ—Ä–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π")
        self.create_history_tab()
        
        # –í–∫–ª–∞–¥–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        self.tabview.add("‚ÑπÔ∏è –û —Å–∏—Å—Ç–µ–º–µ")
        self.create_info_tab()
        
    def create_recommendation_tab(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –≤–∫–ª–∞–¥–∫–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π"""
        tab = self.tabview.tab("üéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏")
        
        # –ì–ª–∞–≤–Ω–∞—è —Ä–∞–º–∫–∞
        main_frame = ctk.CTkFrame(tab)
        main_frame.pack(fill="both", expand=True, padx=10, pady=10)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title_label = ctk.CTkLabel(
            main_frame, 
            text="üéÆ –°–∏—Å—Ç–µ–º–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –∏–≥—Ä",
            font=ctk.CTkFont(size=28, weight="bold")
        )
        title_label.pack(pady=20)
        
        # –†–∞–º–∫–∞ –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
        params_frame = ctk.CTkScrollableFrame(main_frame, height=400)
        params_frame.pack(fill="both", expand=True, padx=20, pady=10)
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª–µ–π –≤–≤–æ–¥–∞
        self.create_input_fields(params_frame)
        
        # –ö–Ω–æ–ø–∫–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        recommend_btn = ctk.CTkButton(
            main_frame,
            text="‚ú® –ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é",
            command=self.get_recommendation,
            font=ctk.CTkFont(size=16, weight="bold"),
            height=40,
            corner_radius=10
        )
        recommend_btn.pack(pady=20)
        
        # –†–µ–∑—É–ª—å—Ç–∞—Ç
        self.result_frame = ctk.CTkFrame(main_frame)
        self.result_frame.pack(fill="x", padx=20, pady=10)
        
        self.result_label = ctk.CTkLabel(
            self.result_frame,
            text="–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏",
            font=ctk.CTkFont(size=16),
            wraplength=800
        )
        self.result_label.pack(pady=20)
        
    def create_input_fields(self, parent):
        """–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª–µ–π –≤–≤–æ–¥–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤"""
        fields_data = [
            ("üéÆ –ñ–∞–Ω—Ä", self.genre_var, ["RPG", "FPS", "–ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ", "—Å—Ç—Ä–∞—Ç–µ–≥–∏—è", "—Å–∏–º—É–ª—è—Ç–æ—Ä", "–≥–æ–Ω–∫–∏", "—ç–∫—à–µ–Ω"]),
            ("üåç –¢–µ–º–∞—Ç–∏–∫–∞", self.theme_var, ["–§—ç–Ω—Ç–µ–∑–∏", "Sci-fi", "Steampunk", "Post-Apocalyptic", "–í—ã–∂–∏–≤–∞–Ω–∏–µ", "–ê–Ω–∏–º–µ", "–û—Ç–∫—Ä—ã—Ç—ã–π –º–∏—Ä", "–•–æ—Ä—Ä–æ—Ä", "–°–æ–≤—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å", "–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π"]),
            ("üîû –í–æ–∑—Ä–∞—Å—Ç–Ω–æ–π —Ä–µ–π—Ç–∏–Ω–≥", self.rating_var, ["E", "T", "M", "AO"]),
            ("üë• –¢–∏–ø –∏–≥—Ä–æ–∫–æ–≤", self.players_var, ["–∫–æ–æ–ø–µ—Ä–∞—Ç–∏–≤", "–º–∞—Å—Å–æ–≤—ã–π –º—É–ª—å—Ç–∏–ø–ª–µ–µ—Ä", "–æ–¥–∏–Ω–æ—á–Ω–∞—è –∏–≥—Ä–∞", "–º–Ω–æ–≥–æ–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –∏–≥—Ä–∞"]),
            ("üìÖ –ì–æ–¥ –≤—ã–ø—É—Å–∫–∞", self.year_var, None),
            ("üé® –ì—Ä–∞—Ñ–∏–∫–∞", self.graphics_var, ["—Ä–µ–∞–ª–∏–∑–º", "—Å–µ–º–∏-—Ä–µ–∞–ª–∏–∑–º", "–∫–∞–∑—É–∞–ª—å–Ω–∞—è –≥—Ä–∞—Ñ–∏–∫–∞", "–ø–∏–∫—Å–µ–ª—å –∞—Ä—Ç", "–≤–æ–∫—Å–µ–ª—å –∞—Ä—Ç"]),
            ("‚ö° –°–ª–æ–∂–Ω–æ—Å—Ç—å", self.difficulty_var, ["–Ω–∏–∑–∫–∞—è", "—Å—Ä–µ–¥–Ω—è—è", "–≤—ã—Å–æ–∫–∞—è", "—Ö–∞—Ä–¥–∫–æ—Ä"]),
            ("üìà –ü–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å", self.popularity_var, ["–Ω–∏–∑–∫–∞—è", "—Å—Ä–µ–¥–Ω—è—è", "–≤—ã—Å–æ–∫–∞—è"]),
            ("üíæ DLC", self.dlc_var, ["–î–∞", "–ù–µ—Ç"]),
            ("üñ•Ô∏è –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞", self.platform_var, ["PC", "PlayStation", "Xbox", "Nintendo", "–º–æ–±–∏–ª—å–Ω—ã–µ"])
        ]
        
        # –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ç–∫–∏ –ø–æ–ª–µ–π (2 –∫–æ–ª–æ–Ω–∫–∏)
        for i, (label, var, options) in enumerate(fields_data):
            row = i // 2
            col = i % 2
            
            # –†–∞–º–∫–∞ –¥–ª—è –ø–æ–ª—è
            field_frame = ctk.CTkFrame(parent)
            field_frame.grid(row=row, column=col, padx=10, pady=5, sticky="ew")
            
            # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–ª–æ–Ω–æ–∫
            parent.grid_columnconfigure(0, weight=1)
            parent.grid_columnconfigure(1, weight=1)
            
            # –ú–µ—Ç–∫–∞
            label_widget = ctk.CTkLabel(field_frame, text=label, font=ctk.CTkFont(size=14, weight="bold"))
            label_widget.pack(pady=(10, 5))
            
            # –ü–æ–ª–µ –≤–≤–æ–¥–∞
            if options:
                input_widget = ctk.CTkOptionMenu(
                    field_frame,
                    variable=var,
                    values=options,
                    font=ctk.CTkFont(size=12),
                    dropdown_font=ctk.CTkFont(size=12)
                )
            else:
                input_widget = ctk.CTkEntry(
                    field_frame,
                    textvariable=var,
                    font=ctk.CTkFont(size=12),
                    justify="center"
                )
            
            input_widget.pack(pady=(0, 10), padx=10, fill="x")
    
    def create_history_tab(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –≤–∫–ª–∞–¥–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏"""
        tab = self.tabview.tab("üìö –ò—Å—Ç–æ—Ä–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π")
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title_label = ctk.CTkLabel(
            tab,
            text="üìö –ò—Å—Ç–æ—Ä–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π",
            font=ctk.CTkFont(size=24, weight="bold")
        )
        title_label.pack(pady=20)
        
        # –†–∞–º–∫–∞ –¥–ª—è —Å–ø–∏—Å–∫–∞
        self.history_frame = ctk.CTkScrollableFrame(tab, height=600)
        self.history_frame.pack(fill="both", expand=True, padx=20, pady=10)
        
        # –ö–Ω–æ–ø–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        refresh_btn = ctk.CTkButton(
            tab,
            text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫",
            command=self.update_history,
            font=ctk.CTkFont(size=14)
        )
        refresh_btn.pack(pady=10)
        
        # –ó–∞–≥—Ä—É–∑–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏
        self.update_history()
    
    def create_info_tab(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏"""
        tab = self.tabview.tab("‚ÑπÔ∏è –û —Å–∏—Å—Ç–µ–º–µ")
        
        info_frame = ctk.CTkScrollableFrame(tab)
        info_frame.pack(fill="both", expand=True, padx=20, pady=20)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title_label = ctk.CTkLabel(
            info_frame,
            text="‚ÑπÔ∏è –û —Å–∏—Å—Ç–µ–º–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –∏–≥—Ä",
            font=ctk.CTkFont(size=24, weight="bold")
        )
        title_label.pack(pady=20)
        
        # –û–ø–∏—Å–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
        description = """
üéØ –≠—Ç–∞ —Å–∏—Å—Ç–µ–º–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–µ –∑–Ω–∞–Ω–∏—è –¥–ª—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã—Ö –∏–≥—Ä.

üìã –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:
‚Ä¢ –°–∏—Å—Ç–µ–º–∞ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤–∞—à–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ –º–Ω–æ–∂–µ—Å—Ç–≤—É –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
‚Ä¢ –ü—Ä–∏–º–µ–Ω—è–µ—Ç –ø—Ä–æ—Å—Ç—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–ª–æ–∂–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ –ø–æ–¥–±–æ—Ä–∞ –∏–≥—Ä
‚Ä¢ –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ü–µ–ª–µ–≤—É—é –∞—É–¥–∏—Ç–æ—Ä–∏—é –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏–≥—Ä—ã

üß† –¢–∏–ø—ã –ø—Ä–∞–≤–∏–ª:
‚Ä¢ –ü—Ä–æ—Å—Ç—ã–µ –ø—Ä–∞–≤–∏–ª–∞: –∂–∞–Ω—Ä ‚Üí –º–µ—Ö–∞–Ω–∏–∫–∞, –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å ‚Üí —Å–ª–æ–∂–Ω–æ—Å—Ç—å
‚Ä¢ –°–ª–æ–∂–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞: –∫–æ–º–±–∏–Ω–∞—Ü–∏—è —É—Å–ª–æ–≤–∏–π ‚Üí –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è –∏–≥—Ä–∞
‚Ä¢ –ü—Ä–∞–≤–∏–ª–∞ –∞—É–¥–∏—Ç–æ—Ä–∏–∏: –ø–∞—Ä–∞–º–µ—Ç—Ä—ã ‚Üí —Ç–∏–ø –∏–≥—Ä–æ–∫–æ–≤ (–¥–µ—Ç–∏, –∫–∞–∑—É–∞–ª—å–Ω—ã–µ, —Ö–∞—Ä–¥–∫–æ—Ä–Ω—ã–µ)

üéÆ –ñ–∞–Ω—Ä—ã –∏–≥—Ä:
‚Ä¢ RPG - —Ä–æ–ª–µ–≤—ã–µ –∏–≥—Ä—ã —Å –ø—Ä–æ–∫–∞—á–∫–æ–π –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
‚Ä¢ FPS - —à—É—Ç–µ—Ä—ã –æ—Ç –ø–µ—Ä–≤–æ–≥–æ –ª–∏—Ü–∞
‚Ä¢ –°—Ç—Ä–∞—Ç–µ–≥–∏—è - –∏–≥—Ä—ã –Ω–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —Ç–∞–∫—Ç–∏–∫—É
‚Ä¢ –ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è - –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –º–∏—Ä–∞ –∏ —Å—é–∂–µ—Ç
‚Ä¢ –°–∏–º—É–ª—è—Ç–æ—Ä—ã - –∏–º–∏—Ç–∞—Ü–∏—è —Ä–µ–∞–ª—å–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
‚Ä¢ –ì–æ–Ω–∫–∏ - –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω—ã–µ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è
‚Ä¢ –≠–∫—à–µ–Ω - –¥–∏–Ω–∞–º–∏—á–Ω—ã–µ –±–æ–µ–≤—ã–µ –∏–≥—Ä—ã

üåü –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:
‚Ä¢ –£—á–∏—Ç—ã–≤–∞–µ—Ç –≤–æ–∑—Ä–∞—Å—Ç–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
‚Ä¢ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞–º
‚Ä¢ –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏–π —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç –∏–≥—Ä—ã —Å –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∏–ª–∏ –∫–ª–∞—Å—Å–∏–∫—É
        """
        
        info_label = ctk.CTkLabel(
            info_frame,
            text=description,
            font=ctk.CTkFont(size=14),
            justify="left",
            wraplength=800
        )
        info_label.pack(pady=20, padx=20)
        
    def get_recommendation(self):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏"""
        try:
            # –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ
            inputs = {
                "–ñ": self.genre_var.get(),
                "–¢–µ–º": self.theme_var.get(),
                "–†": self.rating_var.get(),
                "–ß–∏—Å": self.players_var.get(),
                "–ì": int(self.year_var.get()),
                "–ì—Ä": self.graphics_var.get(),
                "–°–ª": self.difficulty_var.get(),
                "–ü–æ–ø": self.popularity_var.get(),
                "DLC": self.dlc_var.get(),
                "–ü": self.platform_var.get(),
            }
        except ValueError:
            messagebox.showerror("–û—à–∏–±–∫–∞", "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≥–æ–¥")
            return
        
        # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é
        recommendation = get_recommendation(inputs)
        audience = determine_audience(inputs)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É
        inputs["A"] = audience
        save_game(inputs, recommendation)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        self.show_result(recommendation, audience, inputs)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é
        self.update_history()
    
    def show_result(self, recommendation, audience, inputs):
        """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏"""
        # –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        for widget in self.result_frame.winfo_children():
            widget.destroy()
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        result_title = ctk.CTkLabel(
            self.result_frame,
            text="üéØ –†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏",
            font=ctk.CTkFont(size=20, weight="bold")
        )
        result_title.pack(pady=(15, 10))
        
        # –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω–∞—è –∏–≥—Ä–∞
        game_label = ctk.CTkLabel(
            self.result_frame,
            text=f"üéÆ –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω–∞—è –∏–≥—Ä–∞: {recommendation}",
            font=ctk.CTkFont(size=18, weight="bold"),
            text_color=("green", "lightgreen")
        )
        game_label.pack(pady=5)
        
        # –ê—É–¥–∏—Ç–æ—Ä–∏—è
        audience_label = ctk.CTkLabel(
            self.result_frame,
            text=f"üë• –¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è: {audience}",
            font=ctk.CTkFont(size=16)
        )
        audience_label.pack(pady=5)
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        info_text = f"""
üîç –ê–Ω–∞–ª–∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤:
‚Ä¢ –ñ–∞–Ω—Ä: {inputs['–ñ']} | –¢–µ–º–∞—Ç–∏–∫–∞: {inputs['–¢–µ–º']}
‚Ä¢ –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: {inputs['–ü']} | –ì–æ–¥: {inputs['–ì']}
‚Ä¢ –°–ª–æ–∂–Ω–æ—Å—Ç—å: {inputs['–°–ª']} | –ü–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å: {inputs['–ü–æ–ø']}
‚Ä¢ –ì—Ä–∞—Ñ–∏–∫–∞: {inputs['–ì—Ä']} | DLC: {inputs['DLC']}
        """
        
        info_label = ctk.CTkLabel(
            self.result_frame,
            text=info_text,
            font=ctk.CTkFont(size=12),
            justify="left"
        )
        info_label.pack(pady=(10, 15))
    
    def update_history(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π"""
        # –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é –∏—Å—Ç–æ—Ä–∏—é
        for widget in self.history_frame.winfo_children():
            widget.destroy()
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã
        games = fetch_all_games()
        
        if not games:
            no_data_label = ctk.CTkLabel(
                self.history_frame,
                text="üìù –ò—Å—Ç–æ—Ä–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø—É—Å—Ç–∞",
                font=ctk.CTkFont(size=16)
            )
            no_data_label.pack(pady=50)
            return
        
        # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∫–∞–∂–¥—É—é –∏–≥—Ä—É
        for i, game in enumerate(reversed(games[-20:])):  # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 20 –∑–∞–ø–∏—Å–µ–π
            self.create_history_item(game, i)
    
    def create_history_item(self, game, index):
        """–°–æ–∑–¥–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –∏—Å—Ç–æ—Ä–∏–∏"""
        # –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–≥—Ä—ã
        (id_, name, genre, theme, rating, players, year, graphics, 
         difficulty, popularity, dlc, mech, audience, support, online, platform) = game
        
        # –†–∞–º–∫–∞ –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–∞
        item_frame = ctk.CTkFrame(self.history_frame)
        item_frame.pack(fill="x", padx=10, pady=5)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –∏–≥—Ä—ã
        title_label = ctk.CTkLabel(
            item_frame,
            text=f"üéÆ {name}",
            font=ctk.CTkFont(size=16, weight="bold"),
            anchor="w"
        )
        title_label.pack(fill="x", padx=15, pady=(10, 5))
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏–≥—Ä–µ
        info_text = f"""
üéØ –ñ–∞–Ω—Ä: {genre} | üåç –¢–µ–º–∞—Ç–∏–∫–∞: {theme} | üîû –†–µ–π—Ç–∏–Ω–≥: {rating}
üë• –ò–≥—Ä–æ–∫–∏: {players} | üìÖ –ì–æ–¥: {year} | üé® –ì—Ä–∞—Ñ–∏–∫–∞: {graphics}
‚ö° –°–ª–æ–∂–Ω–æ—Å—Ç—å: {difficulty} | üìà –ü–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å: {popularity} | üíæ DLC: {dlc}
üñ•Ô∏è –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: {platform} | üë§ –ê—É–¥–∏—Ç–æ—Ä–∏—è: {audience}
        """
        
        info_label = ctk.CTkLabel(
            item_frame,
            text=info_text.strip(),
            font=ctk.CTkFont(size=11),
            justify="left",
            anchor="w"
        )
        info_label.pack(fill="x", padx=15, pady=(0, 10))
    
    def run(self):
        """–ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
        self.root.mainloop()

if __name__ == "__main__":
    app = GameRecommendationApp()
    app.run()